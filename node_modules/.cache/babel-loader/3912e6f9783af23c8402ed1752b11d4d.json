{"ast":null,"code":"var _jsxFileName = \"F:\\\\node\\\\react_bookshelf\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCards } from './actions/getcards';\nimport convert_quarter_string from './js/convert_quarter_string';\nimport './cssfiles.js';\nimport Heading from './fields.js';\nimport FontAwesome from 'react-fontawesome';\nimport Shelf from './img/shelf.jpg';\nimport Book from './img/book.jpg';\nimport SingleDropdown from './SingleDropdown';\nimport SingleDropdownMobile from './SingleDropdownMobile';\n\nvar App = function App(_ref) {\n  var cards = _ref.cards,\n      onFindCard = _ref.onFindCard,\n      onGetCards = _ref.onGetCards,\n      onToggleList = _ref.onToggleList,\n      ownProps = _ref.ownProps;\n  var searchInput = '';\n  var mobilesearchInput = '';\n  var mobileOpen = false;\n\n  var findCard = function findCard() {\n    onFindCard(searchInput.value);\n  };\n\n  var toggleList = function toggleList(ev, name) {\n    onToggleList(name);\n  };\n\n  var shelf_Style = function shelf_Style(a) {\n    return {\n      backgroundSize: \"cover\",\n      display: \"block\",\n      minHeight: \"100vh\",\n      overflowX: \"hidden\",\n      height: \"100%\",\n      backgroundImage: \"url(\" + Shelf + \")\"\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cards\",\n    style: shelf_Style(Shelf),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"fields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row blueb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-12 col-xs-12 flex cardsearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: findCard,\n    ref: function ref(input) {\n      searchInput = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, console.log('cards', cards), cards.map(function (card, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"col-md-3 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"el_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, card.title))));\n  }))), React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" \", React.createElement(\"button\", {\n    id: \"getcard\",\n    onClick: onGetCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Get books\"), \" \"));\n};\n\nexport default connect(function (state, ownProps) {\n  return {\n    cards: state.cards,\n    ownProps: ownProps\n  };\n}, function (dispatch) {\n  return {\n    onFindCard: function onFindCard(task) {\n      dispatch({\n        type: 'FIND_CARD',\n        payload: task\n      });\n    },\n    onGetCards: function onGetCards() {\n      dispatch(getCards());\n    },\n    onToggleList: function onToggleList(payload) {\n      dispatch({\n        type: 'TOGGLE_LIST',\n        payload: payload\n      });\n    }\n  };\n})(App);","map":{"version":3,"sources":["F:\\node\\react_bookshelf\\src\\App.js"],"names":["React","connect","getCards","convert_quarter_string","Heading","FontAwesome","Shelf","Book","SingleDropdown","SingleDropdownMobile","App","cards","onFindCard","onGetCards","onToggleList","ownProps","searchInput","mobilesearchInput","mobileOpen","findCard","value","toggleList","ev","name","shelf_Style","a","backgroundSize","display","minHeight","overflowX","height","backgroundImage","input","console","log","map","card","index","title","state","dispatch","task","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCards } from './actions/getcards';\r\nimport convert_quarter_string from './js/convert_quarter_string';\r\nimport './cssfiles.js'\r\nimport Heading from './fields.js'\r\nimport FontAwesome from 'react-fontawesome';\r\nimport Shelf from './img/shelf.jpg';\r\nimport Book from './img/book.jpg';\r\nimport SingleDropdown from './SingleDropdown'\r\nimport SingleDropdownMobile from './SingleDropdownMobile'\r\nconst App = ({  cards, onFindCard , onGetCards, onToggleList, ownProps }) => {\r\n  let searchInput = '';\r\n  let mobilesearchInput = '';\r\n  const mobileOpen = false;\r\n  const findCard = () => { onFindCard(searchInput.value) }\r\n  const toggleList = (ev, name) =>{ onToggleList(name) }\r\n  let shelf_Style = (a) => {return { backgroundSize: \"cover\",display: \"block\",minHeight: \"100vh\",overflowX: \"hidden\",height: \"100%\", backgroundImage: \"url(\" +Shelf+ \")\" }}\r\n      return (\r\n      <div className=\"Cards\" style={shelf_Style(Shelf)}>\r\n          <Heading />\r\n        <div className=\"fields\" >\r\n          <div className=\"row blueb\">\r\n              <div className=\"container\">\r\n                <div className=\"col-lg-12 col-xs-12 flex cardsearch\">\r\n                  <input type=\"text\" onChange={findCard} ref={(input) => { searchInput = input}} />\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n          {  console.log('cards', cards)}\r\n          {cards.map((card, index) =>\r\n            <div key={index} className=\"col-md-3 col-sm-6\">\r\n              <div>\r\n              <div className=\"el_card\">\r\n\r\n\r\n                        <h4>{card.title}</h4>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n<div style={({ display: 'none' })} > <button id=\"getcard\" onClick={onGetCards}>Get books</button> </div>\r\n      </div>\r\n    )\r\n}\r\nexport default connect(\r\n  (state, ownProps) => ({\r\n    cards: state.cards,\r\n  ownProps\r\n  }),\r\n  dispatch => ({\r\n    onFindCard : (task) => {\r\n      dispatch({ type: 'FIND_CARD', payload: task})\r\n    },\r\n    onGetCards: () => {\r\n        dispatch(getCards())\r\n    },\r\n    onToggleList : (payload) => {\r\n      dispatch({ type: 'TOGGLE_LIST', payload: payload})\r\n    }\r\n    }),\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}