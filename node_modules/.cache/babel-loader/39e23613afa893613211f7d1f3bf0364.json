{"ast":null,"code":"var initialState = [{\n  title: \"\",\n  __v: 0,\n  _id: \"\"\n}]; // const callApiPost = async (data) => {\n// const response = await fetch('/books', {\n//             method: 'POST',\n//             headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify(data)\n//           })\n// const body = await response.json();\n// if (response.status !== 200) throw Error(body.message);\n//    return body;\n// }\n// const callApiDelete = async (data) => {\n// const response = await fetch('/books/' + data + '', {\n//             method: 'DELETE',\n//             headers: {\n//             'Accept': 'application/json',\n//             'Content-Type': 'application/json',\n//             }\n//           })\n// const body = await response.json();\n// if (response.status !== 200) throw Error(body.message);\n//    return body;\n// }\n//\n//\n//\n\nexport default function cards() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_BOOK') {// callApiPost(action.payload)\n    // return [...state, action.payload]\n  } else if (action.type === 'FETCH_BOOKS_SUCCESS') {\n    // console.log('ADD_BOOK state', state);\n    // console.log('FETCH_BOOKS_SUCCESS reducer', action.payload);\n    return action.payload;\n  } else if (action.type === 'FETCH_BOOKS_SUCCESS') {\n    // console.log('ADD_BOOK state', state);\n    // console.log('FETCH_BOOKS_SUCCESS reducer', action.payload);\n    return action.payload;\n  } else if (action.type === 'DELETE_BOOK') {// callApiDelete(action.payload)\n    // var removeIndex = state.map(function(card) { return card._id; }).indexOf(action.payload);\n    // state.splice(removeIndex, 1);\n    //   return [...state]\n  }\n\n  return state;\n}","map":{"version":3,"sources":["F:\\node\\react_bookshelf\\src\\reducers\\cards.js"],"names":["initialState","title","__v","_id","cards","state","action","type","payload"],"mappings":"AAAA,IAAMA,YAAY,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,EADT;AAEEC,EAAAA,GAAG,EAAE,CAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADqB,CAArB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAe,SAASC,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAC1D,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC,CAC9B;AACA;AAED,GAJD,MAIO,IAAID,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;AAC5C;AACA;AACJ,WAAOD,MAAM,CAACE,OAAd;AAED,GALM,MAMF,IAAIF,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;AAC1C;AACA;AACJ,WAAOD,MAAM,CAACE,OAAd;AAED,GALI,MAMC,IAAIF,MAAM,CAACC,IAAP,KAAgB,aAApB,EAAmC,CACvC;AACA;AACA;AACA;AACD;;AACD,SAAOF,KAAP;AACD","sourcesContent":["const initialState = [\r\n{\r\n  title: \"\",\r\n  __v: 0,\r\n  _id: \"\",\r\n}\r\n];\r\n\r\n// const callApiPost = async (data) => {\r\n// const response = await fetch('/books', {\r\n//             method: 'POST',\r\n//             headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json',\r\n//             },\r\n//             body: JSON.stringify(data)\r\n//           })\r\n// const body = await response.json();\r\n// if (response.status !== 200) throw Error(body.message);\r\n//    return body;\r\n// }\r\n// const callApiDelete = async (data) => {\r\n// const response = await fetch('/books/' + data + '', {\r\n//             method: 'DELETE',\r\n//             headers: {\r\n//             'Accept': 'application/json',\r\n//             'Content-Type': 'application/json',\r\n//             }\r\n//           })\r\n// const body = await response.json();\r\n// if (response.status !== 200) throw Error(body.message);\r\n//    return body;\r\n// }\r\n//\r\n//\r\n//\r\n\r\n\r\nexport default function cards(state = initialState, action) {\r\n  if (action.type === 'ADD_BOOK') {\r\n    // callApiPost(action.payload)\r\n    // return [...state, action.payload]\r\n\r\n  } else if (action.type === 'FETCH_BOOKS_SUCCESS') {\r\n        // console.log('ADD_BOOK state', state);\r\n        // console.log('FETCH_BOOKS_SUCCESS reducer', action.payload);\r\n    return action.payload;\r\n\r\n  }\r\n  else if (action.type === 'FETCH_BOOKS_SUCCESS') {\r\n        // console.log('ADD_BOOK state', state);\r\n        // console.log('FETCH_BOOKS_SUCCESS reducer', action.payload);\r\n    return action.payload;\r\n\r\n  }\r\n   else if (action.type === 'DELETE_BOOK') {\r\n    // callApiDelete(action.payload)\r\n    // var removeIndex = state.map(function(card) { return card._id; }).indexOf(action.payload);\r\n    // state.splice(removeIndex, 1);\r\n    //   return [...state]\r\n  }\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}