{"ast":null,"code":"import _toConsumableArray from \"F:\\\\node\\\\react_bookshelf\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"F:\\\\node\\\\react_bookshelf\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"F:\\\\node\\\\react_bookshelf\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport getCards from '../actions/getcards';\nvar initialState = [{\n  title: \"\",\n  __v: 0,\n  _id: \"\"\n}];\n\nvar callApiPost =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(data) {\n    var response, body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('/books', {\n              method: 'POST',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify(data)\n            });\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            return _context.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, this);\n  }));\n\n  return function callApiPost(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default function cards() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'ADD_BOOK') {\n    callApiPost(JSON.parse(action.payload)).then(function (result) {\n      return [].concat(_toConsumableArray(state), [JSON.parse(action.payload)]);\n    });\n  } else if (action.type === 'FETCH_BOOKS_SUCCESS') {\n    return action.payload;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["F:\\node\\react_bookshelf\\src\\reducers\\cards.js"],"names":["getCards","initialState","title","__v","_id","callApiPost","data","fetch","method","headers","body","JSON","stringify","response","json","status","Error","message","cards","state","action","type","parse","payload","then","result"],"mappings":";;;AAAA,OAAOA,QAAP,MAAsB,qBAAtB;AAEA,IAAMC,YAAY,GAAG,CACrB;AACEC,EAAAA,KAAK,EAAE,EADT;AAEEC,EAAAA,GAAG,EAAE,CAFP;AAGEC,EAAAA,GAAG,EAAE;AAHP,CADqB,CAArB;;AAQA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGC,KAAK,CAAC,QAAD,EAAW;AAC3BC,cAAAA,MAAM,EAAE,MADmB;AAE3BC,cAAAA,OAAO,EAAE;AACT,0BAAU,kBADD;AAET,gCAAgB;AAFP,eAFkB;AAM3BC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AANqB,aAAX,CADR;;AAAA;AACdO,YAAAA,QADc;AAAA;AAAA,mBASDA,QAAQ,CAACC,IAAT,EATC;;AAAA;AASdJ,YAAAA,IATc;;AAAA,kBAUhBG,QAAQ,CAACE,MAAT,KAAoB,GAVJ;AAAA;AAAA;AAAA;;AAAA,kBAUeC,KAAK,CAACN,IAAI,CAACO,OAAN,CAVpB;;AAAA;AAAA,6CAWVP,IAXU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXL,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAkBA,eAAe,SAASa,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBlB,YAAsB;AAAA,MAARmB,MAAQ;;AAC1D,MAAIA,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9BhB,IAAAA,WAAW,CAACM,IAAI,CAACW,KAAL,CAAWF,MAAM,CAACG,OAAlB,CAAD,CAAX,CAAwCC,IAAxC,CAA6C,UAAAC,MAAM,EAAI;AACrD,0CAAWN,KAAX,IAAkBR,IAAI,CAACW,KAAL,CAAWF,MAAM,CAACG,OAAlB,CAAlB;AAED,KAHD;AAMD,GAPD,MAQK,IAAIH,MAAM,CAACC,IAAP,KAAgB,qBAApB,EAA2C;AAC9C,WAAOD,MAAM,CAACG,OAAd;AAED;;AACD,SAAOJ,KAAP;AACD","sourcesContent":["import getCards from  '../actions/getcards'\r\n\r\nconst initialState = [\r\n{\r\n  title: \"\",\r\n  __v: 0,\r\n  _id: \"\",\r\n}\r\n];\r\n\r\nconst callApiPost = async (data) => {\r\nconst response = await fetch('/books', {\r\n            method: 'POST',\r\n            headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n          })\r\nconst body = await response.json();\r\nif (response.status !== 200) throw Error(body.message);\r\n   return body;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default function cards(state = initialState, action) {\r\n  if (action.type === 'ADD_BOOK') {\r\n    callApiPost(JSON.parse(action.payload)).then(result => {\r\n      return [...state, JSON.parse(action.payload)]\r\n\r\n    })\r\n\r\n\r\n  }\r\n  else if (action.type === 'FETCH_BOOKS_SUCCESS') {\r\n    return action.payload;\r\n\r\n  }\r\n  return state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}