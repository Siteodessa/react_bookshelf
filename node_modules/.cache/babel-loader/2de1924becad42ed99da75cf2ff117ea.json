{"ast":null,"code":"var _jsxFileName = \"F:\\\\node\\\\react_bookshelf\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCards } from './actions/getcards';\nimport convert_quarter_string from './js/convert_quarter_string';\nimport './cssfiles.js';\nimport Heading from './fields.js';\nimport FontAwesome from 'react-fontawesome';\nimport './components/dropdown/styles/global.css';\nimport PlaceIcon from \"./css/placeholder.svg\";\nimport PriceIcon from \"./css/price-tag.svg\";\nimport ReduceIcon from \"./css/reduce.svg\";\nimport CountingIcon from \"./css/counting.svg\";\nimport MoneyIcon from './css/MoneyIcon';\nimport CalendarIcon from './css/CalendarIcon';\nimport Shelf from './img/shelf.jpg';\nimport SingleDropdown from './SingleDropdown';\nimport SingleDropdownMobile from './SingleDropdownMobile';\n\nvar App = function App(_ref) {\n  var cards = _ref.cards,\n      filterTypes = _ref.filterTypes,\n      onFindCard = _ref.onFindCard,\n      onMobileFindCard = _ref.onMobileFindCard,\n      onGetCards = _ref.onGetCards,\n      onToggleMobile = _ref.onToggleMobile,\n      onSelectedDistrict = _ref.onSelectedDistrict,\n      onSelectedPrice = _ref.onSelectedPrice,\n      onToggleList = _ref.onToggleList,\n      ownProps = _ref.ownProps;\n  var searchInput = '';\n  var mobilesearchInput = '';\n  var mobileOpen = false;\n\n  var findCard = function findCard() {\n    onFindCard(searchInput.value);\n  };\n\n  var mobilefindCard = function mobilefindCard() {\n    onMobileFindCard(mobilesearchInput.value);\n  };\n\n  var toggleList = function toggleList(ev, name) {\n    onToggleList(name);\n  };\n\n  var toggleMobile = function toggleMobile(ev, name) {\n    onToggleMobile(name);\n  };\n\n  var selectedDistrict = function selectedDistrict(id, key, value) {\n    onSelectedDistrict(id, key, value);\n  };\n\n  var selectedPrice = function selectedPrice(id, key, value) {\n    onSelectedPrice(id, key, value);\n  };\n\n  var image_Style = function image_Style(a) {\n    return {\n      backgroundSize: \"cover\",\n      display: \"block\",\n      height: \"100%\",\n      backgroundImage: \"url(/uploads/\" + a + \")\"\n    };\n  };\n\n  var shelf_Style = function shelf_Style(a) {\n    return {\n      backgroundSize: \"cover\",\n      display: \"block\",\n      height: \"100%\",\n      backgroundImage: \"url(\" + Shelf + \")\"\n    };\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Cards\",\n    style: shelf_Style(Shelf),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Heading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"fields\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row blueb\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-lg-12 col-xs-12 flex cardsearch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    onChange: findCard,\n    ref: function ref(input) {\n      searchInput = input;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: findCard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    alt: \"search\",\n    src: \"/brief/magnifying-glass.svg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), \" \")), React.createElement(\"div\", {\n    className: \"dropdown_proto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, cards.map(function (card, index) {\n    return React.createElement(\"div\", {\n      key: index,\n      className: \"col-md-3 col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"el_card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, card.title))));\n  }))), React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"getcard\",\n    onClick: onGetCards,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Get cards\")));\n};\n\nexport default connect(function (state, ownProps) {\n  return {\n    cards: state.cards.filter(function (card) {\n      return card.note_type === 'Объект' && card.title.toLowerCase().includes(state.filterCards.toLowerCase());\n    }),\n    filterTypes: state.lists.filterTypes,\n    ownProps: ownProps\n  };\n}, function (dispatch) {\n  return {\n    onFindCard: function onFindCard(task) {\n      dispatch({\n        type: 'FIND_CARD',\n        payload: task\n      });\n    },\n    onMobileFindCard: function onMobileFindCard(task) {\n      dispatch({\n        type: 'FIND_CARD',\n        payload: task\n      });\n    },\n    onGetCards: function onGetCards() {\n      dispatch(getCards());\n    },\n    onToggleList: function onToggleList(payload) {\n      dispatch({\n        type: 'TOGGLE_LIST',\n        payload: payload\n      });\n    },\n    onToggleMobile: function onToggleMobile(name) {\n      dispatch({\n        type: 'TOGGLE_MOBILE',\n        payload: name\n      });\n    },\n    onSelectedDistrict: function onSelectedDistrict(id, key, value) {\n      dispatch({\n        type: 'TOGGLE_SELECTED_ITEM',\n        payload: {\n          id: id,\n          key: key\n        }\n      });\n      dispatch({\n        type: 'FILTER_BY_LISTS',\n        payload: {\n          id: id,\n          value: value\n        }\n      });\n    },\n    onSelectedPrice: function onSelectedPrice(id, key, value) {\n      dispatch({\n        type: 'TOGGLE_SELECTED_ITEM',\n        payload: {\n          id: id,\n          key: key\n        }\n      });\n    }\n  };\n})(App);","map":{"version":3,"sources":["F:\\node\\react_bookshelf\\src\\App.js"],"names":["React","connect","getCards","convert_quarter_string","Heading","FontAwesome","MoneyIcon","CalendarIcon","Shelf","SingleDropdown","SingleDropdownMobile","App","cards","filterTypes","onFindCard","onMobileFindCard","onGetCards","onToggleMobile","onSelectedDistrict","onSelectedPrice","onToggleList","ownProps","searchInput","mobilesearchInput","mobileOpen","findCard","value","mobilefindCard","toggleList","ev","name","toggleMobile","selectedDistrict","id","key","selectedPrice","image_Style","a","backgroundSize","display","height","backgroundImage","shelf_Style","input","map","card","index","title","state","filter","note_type","toLowerCase","includes","filterCards","lists","dispatch","task","type","payload"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCards } from './actions/getcards';\r\nimport convert_quarter_string from './js/convert_quarter_string';\r\nimport './cssfiles.js'\r\nimport Heading from './fields.js'\r\nimport FontAwesome from 'react-fontawesome';\r\nimport './components/dropdown/styles/global.css';\r\nimport PlaceIcon from './css/placeholder.svg';\r\nimport PriceIcon from './css/price-tag.svg';\r\nimport ReduceIcon from './css/reduce.svg';\r\nimport CountingIcon from './css/counting.svg';\r\nimport MoneyIcon from './css/MoneyIcon';\r\nimport CalendarIcon from './css/CalendarIcon';\r\nimport Shelf from './img/shelf.jpg';\r\n\r\nimport SingleDropdown from './SingleDropdown'\r\nimport SingleDropdownMobile from './SingleDropdownMobile'\r\n\r\n\r\n\r\nconst App = ({  cards, filterTypes, onFindCard , onMobileFindCard, onGetCards, onToggleMobile, onSelectedDistrict, onSelectedPrice, onToggleList, ownProps }) => {\r\n  let searchInput = '';\r\n  let mobilesearchInput = '';\r\n  const mobileOpen = false;\r\n  const findCard = () => { onFindCard(searchInput.value) }\r\n  const mobilefindCard = () => { onMobileFindCard(mobilesearchInput.value) }\r\n  const toggleList = (ev, name) =>{ onToggleList(name) }\r\n  const toggleMobile = (ev, name) =>{ onToggleMobile(name) }\r\n  const selectedDistrict = (id, key, value) => { onSelectedDistrict(id, key, value) }\r\n  const selectedPrice = (id, key, value) => { onSelectedPrice(id, key, value) }\r\n\r\n  let image_Style = (a) => {return { backgroundSize: \"cover\",display: \"block\",height: \"100%\", backgroundImage: \"url(/uploads/\" +  a  + \")\" }}\r\n  let shelf_Style = (a) => {return { backgroundSize: \"cover\",display: \"block\",height: \"100%\", backgroundImage: \"url(\" +  Shelf  + \")\" }}\r\n      return (\r\n      <div className=\"Cards\" style={shelf_Style(Shelf)}>\r\n\r\n          <Heading />\r\n\r\n        <div className=\"fields\" >\r\n          <div className=\"row blueb\">\r\n              <div className=\"container\">\r\n                <div className=\"col-lg-12 col-xs-12 flex cardsearch\">\r\n                  <input type=\"text\" onChange={findCard} ref={(input) => { searchInput = input}} />\r\n                  <button onClick={findCard}> <img alt=\"search\" src=\"/brief/magnifying-glass.svg\" /> </button>\r\n                </div>\r\n\r\n              <div className=\"dropdown_proto\">\r\n                {/* <DropdownProto /> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"container\">\r\n\r\n\r\n\r\n        <div className=\"row\">\r\n          {\r\n          cards.map((card, index) =>\r\n            <div key={index} className=\"col-md-3 col-sm-6\">\r\n              <div>\r\n              <div className=\"el_card\">\r\n                        <h4>{card.title}</h4>\r\n              </div>\r\n            </div>\r\n            </div>\r\n        )}\r\n        </div>\r\n        </div>\r\n        <div style={({ display: 'none' })} >\r\n          <button id=\"getcard\" onClick={onGetCards}>Get cards</button>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default connect(\r\n  (state, ownProps) => ({\r\n    cards: state.cards\r\n      .filter(\r\n        card => card.note_type === 'Объект' &&\r\n        card.title.toLowerCase().includes(state.filterCards.toLowerCase())\r\n      ),\r\n  filterTypes: state.lists.filterTypes,\r\n  ownProps\r\n  }),\r\n  dispatch => ({\r\n    onFindCard : (task) => {\r\n      dispatch({ type: 'FIND_CARD', payload: task})\r\n    },\r\n    onMobileFindCard : (task) => {\r\n      dispatch({ type: 'FIND_CARD', payload: task})\r\n    },\r\n    onGetCards: () => {\r\n        dispatch(getCards())\r\n    },\r\n    onToggleList : (payload) => {\r\n      dispatch({ type: 'TOGGLE_LIST', payload: payload})\r\n    },\r\n    onToggleMobile : (name) => {\r\n      dispatch({ type: 'TOGGLE_MOBILE', payload: name})\r\n    },\r\n    onSelectedDistrict : (id, key, value) => {\r\n      dispatch({ type: 'TOGGLE_SELECTED_ITEM', payload: {id:id, key:key}})\r\n      dispatch({ type: 'FILTER_BY_LISTS', payload: {id:id, value:value}})\r\n    },\r\n    onSelectedPrice : (id, key, value) => {\r\n      dispatch({ type: 'TOGGLE_SELECTED_ITEM', payload: {id:id, key:key}})\r\n}\r\n  }),\r\n)(App);\r\n"]},"metadata":{},"sourceType":"module"}